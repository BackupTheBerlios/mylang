package mylang.gui;

import mylang.MyLang;
import mylang.data.*;
import java.awt.event.*;
import java.text.*;
import java.util.*;
import javax.swing.*;

/*
 * DialogSession.java
 *
 * Created on 4 listopad 2003, 19:20
 *
 * Copyright 2003 Michal Dabrowski
 *
 * This file is part of MyLang.
 *
 * MyLang is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * MyLang is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with MyLang; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

/**
 *
 * @author  herrmic
 */
public class DialogSession extends javax.swing.JDialog
{
	// Holds all the session data
	private Session m_session;
	
	// Few different comments for the correct answer, they will be displayed
	// in a cycle
	private final String[] m_correctComments =
	{"CORRECT", "OK", "GOOD"};
	private int m_lastCorrectComment;
	
	/** Creates new form DialogSession */
	public DialogSession(java.awt.Frame parent, boolean modal)
	{
		super(parent, modal);
		initComponents();
		
		m_session = null;

		setLocationRelativeTo(parent);
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	private void initComponents()//GEN-BEGIN:initComponents
	{
		java.awt.GridBagConstraints gridBagConstraints;
		
		jLabel1 = new javax.swing.JLabel();
		m_textQuestion = new javax.swing.JTextField();
		m_labelAnswer = new javax.swing.JLabel();
		m_textAnswer = new javax.swing.JTextField();
		jLabel3 = new javax.swing.JLabel();
		m_textTranslator = new javax.swing.JTextField();
		jPanel1 = new javax.swing.JPanel();
		jLabel4 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		m_textStatAnswers = new javax.swing.JTextField();
		jLabel6 = new javax.swing.JLabel();
		m_textStatLeft = new javax.swing.JTextField();
		jLabel7 = new javax.swing.JLabel();
		m_textStatCorrect = new javax.swing.JTextField();
		jLabel8 = new javax.swing.JLabel();
		m_textStatTime = new javax.swing.JTextField();
		jPanel2 = new javax.swing.JPanel();
		m_buttonCheck = new javax.swing.JButton();
		m_buttonCancel = new javax.swing.JButton();
		jPanel3 = new javax.swing.JPanel();
		jSeparator1 = new javax.swing.JSeparator();
		
		getContentPane().setLayout(new java.awt.GridBagLayout());
		
		setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
		setTitle("MyLang - Session");
		setModal(true);
		addWindowListener(new java.awt.event.WindowAdapter()
		{
			public void windowClosing(java.awt.event.WindowEvent evt)
			{
				closeDialog(evt);
			}
		});
		
		jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
		jLabel1.setLabelFor(m_textQuestion);
		jLabel1.setText("Question");
		jLabel1.setFocusable(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		getContentPane().add(jLabel1, gridBagConstraints);
		
		m_textQuestion.setEditable(false);
		m_textQuestion.setToolTipText("<HTML>Question is displayed here.<BR>\nThis is the word you are asked to translate.</HTML>");
		m_textQuestion.setFocusable(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		getContentPane().add(m_textQuestion, gridBagConstraints);
		
		m_labelAnswer.setDisplayedMnemonic('A');
		m_labelAnswer.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
		m_labelAnswer.setLabelFor(m_textAnswer);
		m_labelAnswer.setText("Answer");
		m_labelAnswer.setFocusable(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		getContentPane().add(m_labelAnswer, gridBagConstraints);
		
		m_textAnswer.setToolTipText("<HTML>Type your answer here.<BR>\nHere you type translation of the word displayed in the <B>\"Question\"</B> field.\n</HTML>");
		m_textAnswer.setPreferredSize(new java.awt.Dimension(508, 21));
		m_textAnswer.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				m_textAnswerActionPerformed(evt);
			}
		});
		
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		getContentPane().add(m_textAnswer, gridBagConstraints);
		
		jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
		jLabel3.setLabelFor(m_textTranslator);
		jLabel3.setText("Translator");
		jLabel3.setFocusable(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		getContentPane().add(jLabel3, gridBagConstraints);
		
		m_textTranslator.setEditable(false);
		m_textTranslator.setToolTipText("<HTML>Comment of your last answer.</HTML>");
		m_textTranslator.setFocusable(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		getContentPane().add(m_textTranslator, gridBagConstraints);
		
		jPanel1.setLayout(new java.awt.GridBagLayout());
		
		jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
		jLabel4.setText("Session stats:");
		jLabel4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
		jLabel4.setFocusable(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		jPanel1.add(jLabel4, gridBagConstraints);
		
		jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
		jLabel5.setLabelFor(m_textStatAnswers);
		jLabel5.setText("question:");
		jLabel5.setFocusable(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		jPanel1.add(jLabel5, gridBagConstraints);
		
		m_textStatAnswers.setEditable(false);
		m_textStatAnswers.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		m_textStatAnswers.setText("0");
		m_textStatAnswers.setToolTipText("<HTML>Number of the question.</HTML>");
		m_textStatAnswers.setFocusable(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 0.2;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		jPanel1.add(m_textStatAnswers, gridBagConstraints);
		
		jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
		jLabel6.setLabelFor(m_textStatLeft);
		jLabel6.setText("left:");
		jLabel6.setFocusable(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		jPanel1.add(jLabel6, gridBagConstraints);
		
		m_textStatLeft.setEditable(false);
		m_textStatLeft.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		m_textStatLeft.setToolTipText("<HTML>Number of the words left.</HTML>");
		m_textStatLeft.setFocusable(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 0.2;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		jPanel1.add(m_textStatLeft, gridBagConstraints);
		
		jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
		jLabel7.setLabelFor(m_textStatCorrect);
		jLabel7.setText("correct:");
		jLabel7.setFocusable(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		jPanel1.add(jLabel7, gridBagConstraints);
		
		m_textStatCorrect.setEditable(false);
		m_textStatCorrect.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		m_textStatCorrect.setText("0");
		m_textStatCorrect.setToolTipText("<HTML>Number of your correct answers.</HTML>");
		m_textStatCorrect.setFocusable(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 0.2;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		jPanel1.add(m_textStatCorrect, gridBagConstraints);
		
		jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
		jLabel8.setLabelFor(m_textStatTime);
		jLabel8.setText("time:");
		jLabel8.setFocusable(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		jPanel1.add(jLabel8, gridBagConstraints);
		
		m_textStatTime.setEditable(false);
		m_textStatTime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		m_textStatTime.setText("00:00");
		m_textStatTime.setToolTipText("<HTML>Time that has ellapsed during this session.</HTML>");
		m_textStatTime.setFocusable(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 0.2;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		jPanel1.add(m_textStatTime, gridBagConstraints);
		
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		getContentPane().add(jPanel1, gridBagConstraints);
		
		jPanel2.setLayout(new java.awt.GridBagLayout());
		
		m_buttonCheck.setMnemonic('H');
		m_buttonCheck.setText("Check");
		m_buttonCheck.setToolTipText("<HTML>Use this button to acknowledge your answer.<BR>\n<I>Note: it is usually better to hit Enter instead.</I>\n</HTML>");
		m_buttonCheck.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				m_buttonCheckActionPerformed(evt);
			}
		});
		
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		jPanel2.add(m_buttonCheck, gridBagConstraints);
		
		m_buttonCancel.setMnemonic('C');
		m_buttonCancel.setText("Cancel");
		m_buttonCancel.setToolTipText("<HTML>Interrupts this session.<BR>\n<I>Note: cancelled session is not counted into the dictioraies stats.</I>\n</HTML>");
		m_buttonCancel.setDefaultCapable(false);
		m_buttonCancel.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				m_buttonCancelActionPerformed(evt);
			}
		});
		
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		jPanel2.add(m_buttonCancel, gridBagConstraints);
		
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		jPanel2.add(jPanel3, gridBagConstraints);
		
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 5;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		getContentPane().add(jPanel2, gridBagConstraints);
		
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		getContentPane().add(jSeparator1, gridBagConstraints);
		
		pack();
	}//GEN-END:initComponents
	
	private void m_buttonCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_m_buttonCancelActionPerformed
	{//GEN-HEADEREND:event_m_buttonCancelActionPerformed
		cancelSession();
	}//GEN-LAST:event_m_buttonCancelActionPerformed
	
	private void m_buttonCheckActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_m_buttonCheckActionPerformed
	{//GEN-HEADEREND:event_m_buttonCheckActionPerformed
		checkAnswer();
	}//GEN-LAST:event_m_buttonCheckActionPerformed
	
	private void m_textAnswerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_m_textAnswerActionPerformed
	{//GEN-HEADEREND:event_m_textAnswerActionPerformed
		checkAnswer();
	}//GEN-LAST:event_m_textAnswerActionPerformed
	
	/** Closes the dialog */
	private void closeDialog(java.awt.event.WindowEvent evt)//GEN-FIRST:event_closeDialog
	{
		cancelSession();
	}//GEN-LAST:event_closeDialog
	
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JSeparator jSeparator1;
	private javax.swing.JButton m_buttonCancel;
	private javax.swing.JButton m_buttonCheck;
	private javax.swing.JLabel m_labelAnswer;
	private javax.swing.JTextField m_textAnswer;
	private javax.swing.JTextField m_textQuestion;
	private javax.swing.JTextField m_textStatAnswers;
	private javax.swing.JTextField m_textStatCorrect;
	private javax.swing.JTextField m_textStatLeft;
	private javax.swing.JTextField m_textStatTime;
	private javax.swing.JTextField m_textTranslator;
	// End of variables declaration//GEN-END:variables
	
	public void prepareSession(int mode, int loq, DictionarySet dset)
	{
		// Create new session object and add itself as listener for appropriate
		// properties
		m_session = new Session(dset, mode, loq);
		m_session.addPropertyChangeListener(Session.TIME_ELAPSED_PROPERTY, 
			new java.beans.PropertyChangeListener()
			{
				public void propertyChange(java.beans.PropertyChangeEvent e)
				{
					Calendar cal = (Calendar)e.getNewValue();
					DecimalFormat df = new DecimalFormat("00");
						m_textStatTime.setText(
						df.format(cal.get(Calendar.MINUTE)) + ":"
						+ df.format(cal.get(Calendar.SECOND)));
				}
			});
			
		m_lastCorrectComment = 0;
		m_session.start();
		askNewQuestion();
	}
	
	private void askNewQuestion()
	{
		m_textAnswer.setText("");
		m_textStatAnswers.setText(String.valueOf(m_session.getTotalAnswers() + 1));
		m_textStatCorrect.setText(String.valueOf(m_session.getCorrectAnswers()));
		m_textStatLeft.setText(String.valueOf(m_session.getNumberOfQuestionsLeft()));
		if(m_session.askNewQuestion())
		{
			m_textQuestion.setText(m_session.getCurrentQuestionText());
			m_textAnswer.requestFocus();
		}
		else
		{
			finalizeSession();
		}
	}
	
	private void checkAnswer()
	{
		if(m_session.processAnswer(m_textAnswer.getText()))
		{
			m_lastCorrectComment++;
			if(m_lastCorrectComment >= m_correctComments.length)
				m_lastCorrectComment = 0;
			m_textTranslator.setText(m_correctComments[m_lastCorrectComment]);
		}
		else
		{
			m_textTranslator.setText(m_session.getCurrentQuestionText() + ": " +
				m_session.getExpectedAnswerText());
			
			if(MyLang.getPrefEmphasizeMistakes())
				JOptionPane.showMessageDialog(this,
				"<HTML><CENTER>Wrong answer!<BR>The correct translation of:<BR><BR>"
				+ "<B>" + m_session.getCurrentQuestionText() + "</B><BR><BR>"
				+ "is:<BR><BR>"
				+ "<B>" + m_session.getExpectedAnswerText() + "</B"
				+ "</CENTER></HTML>",
				"Message", JOptionPane.INFORMATION_MESSAGE);
		}
		askNewQuestion();
	}
	
	private void finalizeSession()
	{
		m_textQuestion.setText("");
		m_textAnswer.setEnabled(false);
		m_textAnswer.setEditable(false);
		m_textStatAnswers.setText(String.valueOf(m_session.getTotalAnswers()));
		m_buttonCheck.setEnabled(false);
		m_buttonCancel.setText("Close");
		m_session.finalizeSession();
	}
	
	private void cancelSession()
	{
		if((m_session.getTotalAnswers() > 0) && (m_session.getNumberOfQuestionsLeft() > 0))
		{
			if(JOptionPane.showConfirmDialog(this,
			"Do you really want to interrupt this session?",
			"Question", JOptionPane.YES_NO_OPTION,
			JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION)
				return;
		}
		setVisible(false);
		dispose();
	}
}
